[{"uri":"/Embody/reference/embody.html","title":"Embody","content":"Domain \nLinearAlgebra"},{"uri":"/Embody/reference/embody-external.html","title":"Embody.External","content":"Horizon"},{"uri":"/Embody/reference/embody-integration.html","title":"Embody.Integration","content":"Accelerators \nIntegrators \nAccelerator\u003C\u0027l, \u0027t\u003E \nIntegrator\u003C\u0027l, \u0027t\u003E \nIntegratorSettings\u003C\u0027l, \u0027t\u003E \nIntegratorStep\u003C\u0027l, \u0027t\u003E"},{"uri":"/Embody/reference/embody-simulation.html","title":"Embody.Simulation","content":"Execution \nMetrics \nTransforms \nNumericalMetric\u003C\u0027l, \u0027t, \u0027metric\u003E \nSimulationPreset\u003C\u0027l, \u0027t\u003E \nSimulationResult\u003C\u0027l, \u0027t\u003E"},{"uri":"/Embody/reference/embody-visualisations.html","title":"Embody.Visualisations","content":"Plots2D \nPlots3D \nAxisDefinition \nAxisType \nPlot2D\u003C\u0027x, \u0027y\u003E \nPlot3D\u003C\u0027l, \u0027t\u003E \nSingle2DSeries\u003C\u0027x, \u0027y\u003E \nSingle3DTrajectory\u003C\u0027l, \u0027t\u003E"},{"uri":"/Embody/reference/embody-domain.html","title":"Domain","content":"Domain \n\n Contains building blocks required to define an n-body system to be simulated.\n \nDomain.CelestialBody\u003C\u0027l, \u0027t\u003E \nCelestialBody\u003C\u0027l, \u0027t\u003E \nDomain.CelestialSystem\u003C\u0027l, \u0027t\u003E \nCelestialSystem\u003C\u0027l, \u0027t\u003E"},{"uri":"/Embody/reference/embody-domain-celestialbody.html","title":"CelestialBody\u003C\u0027l, \u0027t\u003E","content":"CelestialBody\u003C\u0027l, \u0027t\u003E \n\n Data structure that represents a single celestial body.\n \nCelestialBody\u003C\u0027l, \u0027t\u003E.Name \nName \nCelestialBody\u003C\u0027l, \u0027t\u003E.GravitationalParameter \nGravitationalParameter \nCelestialBody\u003C\u0027l, \u0027t\u003E.R \nR \nCelestialBody\u003C\u0027l, \u0027t\u003E.V \nV"},{"uri":"/Embody/reference/embody-domain-celestialbody.html#Name","title":"CelestialBody\u003C\u0027l, \u0027t\u003E.Name","content":"CelestialBody\u003C\u0027l, \u0027t\u003E.Name \nName \n"},{"uri":"/Embody/reference/embody-domain-celestialbody.html#GravitationalParameter","title":"CelestialBody\u003C\u0027l, \u0027t\u003E.GravitationalParameter","content":"CelestialBody\u003C\u0027l, \u0027t\u003E.GravitationalParameter \nGravitationalParameter \n"},{"uri":"/Embody/reference/embody-domain-celestialbody.html#R","title":"CelestialBody\u003C\u0027l, \u0027t\u003E.R","content":"CelestialBody\u003C\u0027l, \u0027t\u003E.R \nR \n"},{"uri":"/Embody/reference/embody-domain-celestialbody.html#V","title":"CelestialBody\u003C\u0027l, \u0027t\u003E.V","content":"CelestialBody\u003C\u0027l, \u0027t\u003E.V \nV \n"},{"uri":"/Embody/reference/embody-domain-celestialsystem.html","title":"CelestialSystem\u003C\u0027l, \u0027t\u003E","content":"CelestialSystem\u003C\u0027l, \u0027t\u003E \n\n Data structure that represents a simulated celestial system, with\n all its bodies.\n \nCelestialSystem\u003C\u0027l, \u0027t\u003E.Bodies \nBodies"},{"uri":"/Embody/reference/embody-domain-celestialsystem.html#Bodies","title":"CelestialSystem\u003C\u0027l, \u0027t\u003E.Bodies","content":"CelestialSystem\u003C\u0027l, \u0027t\u003E.Bodies \nBodies \n"},{"uri":"/Embody/reference/embody-linearalgebra.html","title":"LinearAlgebra","content":"LinearAlgebra \n \nLinearAlgebra.Vector3 \nVector3 \nLinearAlgebra.NumericalVector3\u003C\u0027u\u003E \nNumericalVector3\u003C\u0027u\u003E \nLinearAlgebra.vector3 \nvector3"},{"uri":"/Embody/reference/embody-linearalgebra.html#vector3","title":"LinearAlgebra.vector3","content":"LinearAlgebra.vector3 \nvector3 \n\n Construct an actual 3D vector. A shorthand function.\n"},{"uri":"/Embody/reference/embody-linearalgebra-vector3.html","title":"Vector3","content":"Vector3 \n\n A module which implements vector operations.\n \nVector3.zero \nzero \nVector3.squaredLength \nsquaredLength \nVector3.length \nlength \nVector3.dot \ndot \nVector3.cross \ncross \nVector3.strip \nstrip"},{"uri":"/Embody/reference/embody-linearalgebra-vector3.html#zero","title":"Vector3.zero","content":"Vector3.zero \nzero \n\n Return a zero vector, with a desired unit of measure.\n"},{"uri":"/Embody/reference/embody-linearalgebra-vector3.html#squaredLength","title":"Vector3.squaredLength","content":"Vector3.squaredLength \nsquaredLength \n\n Compute squared length (squared magnitude) of a vector.\n"},{"uri":"/Embody/reference/embody-linearalgebra-vector3.html#length","title":"Vector3.length","content":"Vector3.length \nlength \n\n Compute length (magnitude) of a vector.\n"},{"uri":"/Embody/reference/embody-linearalgebra-vector3.html#dot","title":"Vector3.dot","content":"Vector3.dot \ndot \n\n Compute a dot product of 2 vectors. Vectors can have different units of measure.\n"},{"uri":"/Embody/reference/embody-linearalgebra-vector3.html#cross","title":"Vector3.cross","content":"Vector3.cross \ncross \n\n Compute a cross product of 2 vectors. Vectors can have different units of measure.\n"},{"uri":"/Embody/reference/embody-linearalgebra-vector3.html#strip","title":"Vector3.strip","content":"Vector3.strip \nstrip \n\n Return a unitless vector, i.e. stripped of its unit of measure.\n"},{"uri":"/Embody/reference/embody-linearalgebra-numericalvector3.html","title":"NumericalVector3\u003C\u0027u\u003E","content":"NumericalVector3\u003C\u0027u\u003E \n\n Data structure that represents a 3D vector.\n\n Consider instantiating a vector using a helper function \u0060vector3\u0060.\n \nNumericalVector3\u003C\u0027u\u003E.(\u002B) \n(\u002B) \nNumericalVector3\u003C\u0027u\u003E.(/) \n(/) \nNumericalVector3\u003C\u0027u\u003E.(*) \n(*) \nNumericalVector3\u003C\u0027u\u003E.(*) \n(*) \nNumericalVector3\u003C\u0027u\u003E.(-) \n(-) \nNumericalVector3\u003C\u0027u\u003E.(~-) \n(~-) \nNumericalVector3\u003C\u0027u\u003E.(~\u002B) \n(~\u002B) \nNumericalVector3\u003C\u0027u\u003E.x \nx \nNumericalVector3\u003C\u0027u\u003E.y \ny \nNumericalVector3\u003C\u0027u\u003E.z \nz"},{"uri":"/Embody/reference/embody-linearalgebra-numericalvector3.html#(\u002B)","title":"NumericalVector3\u003C\u0027u\u003E.(\u002B)","content":"NumericalVector3\u003C\u0027u\u003E.(\u002B) \n(\u002B) \n"},{"uri":"/Embody/reference/embody-linearalgebra-numericalvector3.html#(/)","title":"NumericalVector3\u003C\u0027u\u003E.(/)","content":"NumericalVector3\u003C\u0027u\u003E.(/) \n(/) \n"},{"uri":"/Embody/reference/embody-linearalgebra-numericalvector3.html#(*)","title":"NumericalVector3\u003C\u0027u\u003E.(*)","content":"NumericalVector3\u003C\u0027u\u003E.(*) \n(*) \n"},{"uri":"/Embody/reference/embody-linearalgebra-numericalvector3.html#(*)","title":"NumericalVector3\u003C\u0027u\u003E.(*)","content":"NumericalVector3\u003C\u0027u\u003E.(*) \n(*) \n"},{"uri":"/Embody/reference/embody-linearalgebra-numericalvector3.html#(-)","title":"NumericalVector3\u003C\u0027u\u003E.(-)","content":"NumericalVector3\u003C\u0027u\u003E.(-) \n(-) \n"},{"uri":"/Embody/reference/embody-linearalgebra-numericalvector3.html#(~-)","title":"NumericalVector3\u003C\u0027u\u003E.(~-)","content":"NumericalVector3\u003C\u0027u\u003E.(~-) \n(~-) \n"},{"uri":"/Embody/reference/embody-linearalgebra-numericalvector3.html#(~\u002B)","title":"NumericalVector3\u003C\u0027u\u003E.(~\u002B)","content":"NumericalVector3\u003C\u0027u\u003E.(~\u002B) \n(~\u002B) \n"},{"uri":"/Embody/reference/embody-linearalgebra-numericalvector3.html#x","title":"NumericalVector3\u003C\u0027u\u003E.x","content":"NumericalVector3\u003C\u0027u\u003E.x \nx \n"},{"uri":"/Embody/reference/embody-linearalgebra-numericalvector3.html#y","title":"NumericalVector3\u003C\u0027u\u003E.y","content":"NumericalVector3\u003C\u0027u\u003E.y \ny \n"},{"uri":"/Embody/reference/embody-linearalgebra-numericalvector3.html#z","title":"NumericalVector3\u003C\u0027u\u003E.z","content":"NumericalVector3\u003C\u0027u\u003E.z \nz \n"},{"uri":"/Embody/reference/embody-external-horizon.html","title":"Horizon","content":"Horizon \n\n A module that is responsible for working with data from Horizons System.\n\n See: https://ssd.jpl.nasa.gov/horizons/\n \nHorizon.Ephemeride\u003C\u0027step\u003E \nEphemeride\u003C\u0027step\u003E \nHorizon.VectorTableStep \nVectorTableStep \nHorizon.parseVectorTable \nparseVectorTable"},{"uri":"/Embody/reference/embody-external-horizon.html#parseVectorTable","title":"Horizon.parseVectorTable","content":"Horizon.parseVectorTable \nparseVectorTable \n"},{"uri":"/Embody/reference/embody-external-horizon-ephemeride-1.html","title":"Ephemeride\u003C\u0027step\u003E","content":"Ephemeride\u003C\u0027step\u003E \n \nEphemeride\u003C\u0027step\u003E.BodyName \nBodyName \nEphemeride\u003C\u0027step\u003E.Steps \nSteps"},{"uri":"/Embody/reference/embody-external-horizon-ephemeride-1.html#BodyName","title":"Ephemeride\u003C\u0027step\u003E.BodyName","content":"Ephemeride\u003C\u0027step\u003E.BodyName \nBodyName \n"},{"uri":"/Embody/reference/embody-external-horizon-ephemeride-1.html#Steps","title":"Ephemeride\u003C\u0027step\u003E.Steps","content":"Ephemeride\u003C\u0027step\u003E.Steps \nSteps \n"},{"uri":"/Embody/reference/embody-external-horizon-vectortablestep.html","title":"VectorTableStep","content":"VectorTableStep \n \nVectorTableStep.JulianDayNumber \nJulianDayNumber \nVectorTableStep.X \nX \nVectorTableStep.Y \nY \nVectorTableStep.Z \nZ \nVectorTableStep.VX \nVX \nVectorTableStep.VY \nVY \nVectorTableStep.VZ \nVZ \nVectorTableStep.RG \nRG"},{"uri":"/Embody/reference/embody-external-horizon-vectortablestep.html#JulianDayNumber","title":"VectorTableStep.JulianDayNumber","content":"VectorTableStep.JulianDayNumber \nJulianDayNumber \n"},{"uri":"/Embody/reference/embody-external-horizon-vectortablestep.html#X","title":"VectorTableStep.X","content":"VectorTableStep.X \nX \n"},{"uri":"/Embody/reference/embody-external-horizon-vectortablestep.html#Y","title":"VectorTableStep.Y","content":"VectorTableStep.Y \nY \n"},{"uri":"/Embody/reference/embody-external-horizon-vectortablestep.html#Z","title":"VectorTableStep.Z","content":"VectorTableStep.Z \nZ \n"},{"uri":"/Embody/reference/embody-external-horizon-vectortablestep.html#VX","title":"VectorTableStep.VX","content":"VectorTableStep.VX \nVX \n"},{"uri":"/Embody/reference/embody-external-horizon-vectortablestep.html#VY","title":"VectorTableStep.VY","content":"VectorTableStep.VY \nVY \n"},{"uri":"/Embody/reference/embody-external-horizon-vectortablestep.html#VZ","title":"VectorTableStep.VZ","content":"VectorTableStep.VZ \nVZ \n"},{"uri":"/Embody/reference/embody-external-horizon-vectortablestep.html#RG","title":"VectorTableStep.RG","content":"VectorTableStep.RG \nRG \n"},{"uri":"/Embody/reference/embody-integration-accelerators.html","title":"Accelerators","content":"Accelerators \n \nAccelerators.allBodiesConnected \nallBodiesConnected"},{"uri":"/Embody/reference/embody-integration-accelerators.html#allBodiesConnected","title":"Accelerators.allBodiesConnected","content":"Accelerators.allBodiesConnected \nallBodiesConnected \n\n Accelerator that calculates forces between every pair of bodies.\n\n TODO: optimize: r_ij and r_ji are currently calculated separately, even though r_ij = -r_ji.\n"},{"uri":"/Embody/reference/embody-integration-integrators.html","title":"Integrators","content":"Integrators \n\n Contains implementations of the integrators (aka numerical integration methods).\n \nIntegrators.integrateForwardEuler \nintegrateForwardEuler \nIntegrators.integrateMidpoint \nintegrateMidpoint \nIntegrators.integrateRK4 \nintegrateRK4 \nIntegrators.integrateVelocityVerlet \nintegrateVelocityVerlet \nIntegrators.integrateLeapfrog \nintegrateLeapfrog"},{"uri":"/Embody/reference/embody-integration-integrators.html#integrateForwardEuler","title":"Integrators.integrateForwardEuler","content":"Integrators.integrateForwardEuler \nintegrateForwardEuler \n\n Forward Euler integration method (commonly known as the Euler method).\n"},{"uri":"/Embody/reference/embody-integration-integrators.html#integrateMidpoint","title":"Integrators.integrateMidpoint","content":"Integrators.integrateMidpoint \nintegrateMidpoint \n\n Midpoint integration method.\n"},{"uri":"/Embody/reference/embody-integration-integrators.html#integrateRK4","title":"Integrators.integrateRK4","content":"Integrators.integrateRK4 \nintegrateRK4 \n\n 4th Runge-Kutta method (aka RK4).\n"},{"uri":"/Embody/reference/embody-integration-integrators.html#integrateVelocityVerlet","title":"Integrators.integrateVelocityVerlet","content":"Integrators.integrateVelocityVerlet \nintegrateVelocityVerlet \n\n Velocity Verlet method.\n"},{"uri":"/Embody/reference/embody-integration-integrators.html#integrateLeapfrog","title":"Integrators.integrateLeapfrog","content":"Integrators.integrateLeapfrog \nintegrateLeapfrog \n\n Leapfrog method.\n"},{"uri":"/Embody/reference/embody-integration-accelerator-2.html","title":"Accelerator\u003C\u0027l, \u0027t\u003E","content":"Accelerator\u003C\u0027l, \u0027t\u003E \n\n Accelerator is a function that calculates accelerations for each body,\n given bodies\u0027 current positions.\n"},{"uri":"/Embody/reference/embody-integration-integrator-2.html","title":"Integrator\u003C\u0027l, \u0027t\u003E","content":"Integrator\u003C\u0027l, \u0027t\u003E \n\n A basis for actual integrators.\n"},{"uri":"/Embody/reference/embody-integration-integratorsettings.html","title":"IntegratorSettings\u003C\u0027l, \u0027t\u003E","content":"IntegratorSettings\u003C\u0027l, \u0027t\u003E \n\n Contains non-domain integrator parameters.\n \nIntegratorSettings\u003C\u0027l, \u0027t\u003E.TStart \nTStart \nIntegratorSettings\u003C\u0027l, \u0027t\u003E.TEnd \nTEnd \nIntegratorSettings\u003C\u0027l, \u0027t\u003E.DeltaT \nDeltaT \nIntegratorSettings\u003C\u0027l, \u0027t\u003E.Accelerator \nAccelerator"},{"uri":"/Embody/reference/embody-integration-integratorsettings.html#TStart","title":"IntegratorSettings\u003C\u0027l, \u0027t\u003E.TStart","content":"IntegratorSettings\u003C\u0027l, \u0027t\u003E.TStart \nTStart \n"},{"uri":"/Embody/reference/embody-integration-integratorsettings.html#TEnd","title":"IntegratorSettings\u003C\u0027l, \u0027t\u003E.TEnd","content":"IntegratorSettings\u003C\u0027l, \u0027t\u003E.TEnd \nTEnd \n"},{"uri":"/Embody/reference/embody-integration-integratorsettings.html#DeltaT","title":"IntegratorSettings\u003C\u0027l, \u0027t\u003E.DeltaT","content":"IntegratorSettings\u003C\u0027l, \u0027t\u003E.DeltaT \nDeltaT \n"},{"uri":"/Embody/reference/embody-integration-integratorsettings.html#Accelerator","title":"IntegratorSettings\u003C\u0027l, \u0027t\u003E.Accelerator","content":"IntegratorSettings\u003C\u0027l, \u0027t\u003E.Accelerator \nAccelerator \n"},{"uri":"/Embody/reference/embody-integration-integratorstep.html","title":"IntegratorStep\u003C\u0027l, \u0027t\u003E","content":"IntegratorStep\u003C\u0027l, \u0027t\u003E \n\n Represents a single integrator step: contains a time step as well as all bodies\u0027\n positions and velocities at that time step.\n \nIntegratorStep\u003C\u0027l, \u0027t\u003E.T \nT \nIntegratorStep\u003C\u0027l, \u0027t\u003E.R \nR \nIntegratorStep\u003C\u0027l, \u0027t\u003E.V \nV"},{"uri":"/Embody/reference/embody-integration-integratorstep.html#T","title":"IntegratorStep\u003C\u0027l, \u0027t\u003E.T","content":"IntegratorStep\u003C\u0027l, \u0027t\u003E.T \nT \n"},{"uri":"/Embody/reference/embody-integration-integratorstep.html#R","title":"IntegratorStep\u003C\u0027l, \u0027t\u003E.R","content":"IntegratorStep\u003C\u0027l, \u0027t\u003E.R \nR \n"},{"uri":"/Embody/reference/embody-integration-integratorstep.html#V","title":"IntegratorStep\u003C\u0027l, \u0027t\u003E.V","content":"IntegratorStep\u003C\u0027l, \u0027t\u003E.V \nV \n"},{"uri":"/Embody/reference/embody-simulation-execution.html","title":"Execution","content":"Execution \n\n A module that offers a few simple ways of executing a simulation.\n \nExecution.simulate \nsimulate \nExecution.simulateAsync \nsimulateAsync \nExecution.simulateInParallel \nsimulateInParallel"},{"uri":"/Embody/reference/embody-simulation-execution.html#simulate","title":"Execution.simulate","content":"Execution.simulate \nsimulate \n\n Execute a single simulation.\n"},{"uri":"/Embody/reference/embody-simulation-execution.html#simulateAsync","title":"Execution.simulateAsync","content":"Execution.simulateAsync \nsimulateAsync \n\n Execute a single simulation, asynchronously.\n"},{"uri":"/Embody/reference/embody-simulation-execution.html#simulateInParallel","title":"Execution.simulateInParallel","content":"Execution.simulateInParallel \nsimulateInParallel \n\n Execute multiple simulations in parallel, and return results once all simulations have finished.\n\n Limitations: all presets must use identical units of measure.\n"},{"uri":"/Embody/reference/embody-simulation-metrics.html","title":"Metrics","content":"Metrics \n \nMetrics.calculateTotalEnergy \ncalculateTotalEnergy"},{"uri":"/Embody/reference/embody-simulation-metrics.html#calculateTotalEnergy","title":"Metrics.calculateTotalEnergy","content":"Metrics.calculateTotalEnergy \ncalculateTotalEnergy \n\n Calculate total energy (TE) of an n-body system.\n TE is the sum of kinetic energy (KE) and potential energy (PE).\n\n On its own, system\u0027s energy doesn\u0027t say much. However, difference between\n current TE and initial TE can serve as a metric of simulation\u0027s quality.\n TE should stay constant in a closed system, and any deviation could be considered an error.\n"},{"uri":"/Embody/reference/embody-simulation-transforms.html","title":"Transforms","content":"Transforms \n\n A module that contains transformations: functions that can be applied to a simulation result.\n \nTransforms.applyMetric \napplyMetric \nTransforms.timeSteps \ntimeSteps \nTransforms.forPositionOf \nforPositionOf \nTransforms.for2PositionsOf \nfor2PositionsOf \nTransforms.forPositionAndVelocityRelativeTo \nforPositionAndVelocityRelativeTo"},{"uri":"/Embody/reference/embody-simulation-transforms.html#applyMetric","title":"Transforms.applyMetric","content":"Transforms.applyMetric \napplyMetric \n\n Apply a metric to the results of a simulation.\n"},{"uri":"/Embody/reference/embody-simulation-transforms.html#timeSteps","title":"Transforms.timeSteps","content":"Transforms.timeSteps \ntimeSteps \n\n Extract all time steps. It might be helpful when gathering data for a graph.\n"},{"uri":"/Embody/reference/embody-simulation-transforms.html#forPositionOf","title":"Transforms.forPositionOf","content":"Transforms.forPositionOf \nforPositionOf \n\n Apply a predicate to position of a given body, for every recorded step of a simulation.\n"},{"uri":"/Embody/reference/embody-simulation-transforms.html#for2PositionsOf","title":"Transforms.for2PositionsOf","content":"Transforms.for2PositionsOf \nfor2PositionsOf \n\n Apply a predicate to positions of a pair of bodies, for every recorded step of a simulation.\n"},{"uri":"/Embody/reference/embody-simulation-transforms.html#forPositionAndVelocityRelativeTo","title":"Transforms.forPositionAndVelocityRelativeTo","content":"Transforms.forPositionAndVelocityRelativeTo \nforPositionAndVelocityRelativeTo \n\n Apply a predicate to position and velocity of a body, **relative to** central body.\n"},{"uri":"/Embody/reference/embody-simulation-numericalmetric-3.html","title":"NumericalMetric\u003C\u0027l, \u0027t, \u0027metric\u003E","content":"NumericalMetric\u003C\u0027l, \u0027t, \u0027metric\u003E \n\n Simulation metric is a function that assigns a value to each simulation step.\n"},{"uri":"/Embody/reference/embody-simulation-simulationpreset.html","title":"SimulationPreset\u003C\u0027l, \u0027t\u003E","content":"SimulationPreset\u003C\u0027l, \u0027t\u003E \n\n Contains data necessary to run a simulation, such as initial conditions and integration settings.\n \nSimulationPreset\u003C\u0027l, \u0027t\u003E.Settings \nSettings \nSimulationPreset\u003C\u0027l, \u0027t\u003E.System \nSystem \nSimulationPreset\u003C\u0027l, \u0027t\u003E.Integrator \nIntegrator"},{"uri":"/Embody/reference/embody-simulation-simulationpreset.html#Settings","title":"SimulationPreset\u003C\u0027l, \u0027t\u003E.Settings","content":"SimulationPreset\u003C\u0027l, \u0027t\u003E.Settings \nSettings \n"},{"uri":"/Embody/reference/embody-simulation-simulationpreset.html#System","title":"SimulationPreset\u003C\u0027l, \u0027t\u003E.System","content":"SimulationPreset\u003C\u0027l, \u0027t\u003E.System \nSystem \n"},{"uri":"/Embody/reference/embody-simulation-simulationpreset.html#Integrator","title":"SimulationPreset\u003C\u0027l, \u0027t\u003E.Integrator","content":"SimulationPreset\u003C\u0027l, \u0027t\u003E.Integrator \nIntegrator \n"},{"uri":"/Embody/reference/embody-simulation-simulationresult.html","title":"SimulationResult\u003C\u0027l, \u0027t\u003E","content":"SimulationResult\u003C\u0027l, \u0027t\u003E \n\n Contains results of a simulation (integration steps). Also stores the simulation\u0027s preset.\n \nSimulationResult\u003C\u0027l, \u0027t\u003E.Preset \nPreset \nSimulationResult\u003C\u0027l, \u0027t\u003E.Steps \nSteps"},{"uri":"/Embody/reference/embody-simulation-simulationresult.html#Preset","title":"SimulationResult\u003C\u0027l, \u0027t\u003E.Preset","content":"SimulationResult\u003C\u0027l, \u0027t\u003E.Preset \nPreset \n"},{"uri":"/Embody/reference/embody-simulation-simulationresult.html#Steps","title":"SimulationResult\u003C\u0027l, \u0027t\u003E.Steps","content":"SimulationResult\u003C\u0027l, \u0027t\u003E.Steps \nSteps \n"},{"uri":"/Embody/reference/embody-visualisations-plots2d.html","title":"Plots2D","content":"Plots2D \n \nPlots2D.plot \nplot \nPlots2D.limitPointCount \nlimitPointCount"},{"uri":"/Embody/reference/embody-visualisations-plots2d.html#plot","title":"Plots2D.plot","content":"Plots2D.plot \nplot \n\n Plot a 2D XPlot.Plotly chart.\n"},{"uri":"/Embody/reference/embody-visualisations-plots2d.html#limitPointCount","title":"Plots2D.limitPointCount","content":"Plots2D.limitPointCount \nlimitPointCount \n\n Keep series\u0027s point count below a certain threshold.\n Might improve rendering performance at the cost of plot resolution.\n"},{"uri":"/Embody/reference/embody-visualisations-plots3d.html","title":"Plots3D","content":"Plots3D \n \nPlots3D.plot \nplot \nPlots3D.limitPointCount \nlimitPointCount"},{"uri":"/Embody/reference/embody-visualisations-plots3d.html#plot","title":"Plots3D.plot","content":"Plots3D.plot \nplot \n\n Plot a 3D XPlot.Plotly chart.\n"},{"uri":"/Embody/reference/embody-visualisations-plots3d.html#limitPointCount","title":"Plots3D.limitPointCount","content":"Plots3D.limitPointCount \nlimitPointCount \n\n Keep series\u0027s point count below a certain threshold.\n Might improve rendering performance at the cost of plot resolution.\n"},{"uri":"/Embody/reference/embody-visualisations-axisdefinition.html","title":"AxisDefinition","content":"AxisDefinition \n\n Represents a plot\u0027s axis (X, Y, maybe even Z).\n \nAxisDefinition.Label \nLabel \nAxisDefinition.Type \nType"},{"uri":"/Embody/reference/embody-visualisations-axisdefinition.html#Label","title":"AxisDefinition.Label","content":"AxisDefinition.Label \nLabel \n"},{"uri":"/Embody/reference/embody-visualisations-axisdefinition.html#Type","title":"AxisDefinition.Type","content":"AxisDefinition.Type \nType \n"},{"uri":"/Embody/reference/embody-visualisations-axistype.html","title":"AxisType","content":"AxisType \n \nAxisType.Linear \nLinear \nAxisType.Logarithmic \nLogarithmic"},{"uri":"/Embody/reference/embody-visualisations-axistype.html#Linear","title":"AxisType.Linear","content":"AxisType.Linear \nLinear \n"},{"uri":"/Embody/reference/embody-visualisations-axistype.html#Logarithmic","title":"AxisType.Logarithmic","content":"AxisType.Logarithmic \nLogarithmic \n"},{"uri":"/Embody/reference/embody-visualisations-plot2d.html","title":"Plot2D\u003C\u0027x, \u0027y\u003E","content":"Plot2D\u003C\u0027x, \u0027y\u003E \n\n Represents a single 2D plot.\n \nPlot2D\u003C\u0027x, \u0027y\u003E.Title \nTitle \nPlot2D\u003C\u0027x, \u0027y\u003E.XAxis \nXAxis \nPlot2D\u003C\u0027x, \u0027y\u003E.YAxis \nYAxis \nPlot2D\u003C\u0027x, \u0027y\u003E.Series \nSeries"},{"uri":"/Embody/reference/embody-visualisations-plot2d.html#Title","title":"Plot2D\u003C\u0027x, \u0027y\u003E.Title","content":"Plot2D\u003C\u0027x, \u0027y\u003E.Title \nTitle \n"},{"uri":"/Embody/reference/embody-visualisations-plot2d.html#XAxis","title":"Plot2D\u003C\u0027x, \u0027y\u003E.XAxis","content":"Plot2D\u003C\u0027x, \u0027y\u003E.XAxis \nXAxis \n"},{"uri":"/Embody/reference/embody-visualisations-plot2d.html#YAxis","title":"Plot2D\u003C\u0027x, \u0027y\u003E.YAxis","content":"Plot2D\u003C\u0027x, \u0027y\u003E.YAxis \nYAxis \n"},{"uri":"/Embody/reference/embody-visualisations-plot2d.html#Series","title":"Plot2D\u003C\u0027x, \u0027y\u003E.Series","content":"Plot2D\u003C\u0027x, \u0027y\u003E.Series \nSeries \n"},{"uri":"/Embody/reference/embody-visualisations-plot3d.html","title":"Plot3D\u003C\u0027l, \u0027t\u003E","content":"Plot3D\u003C\u0027l, \u0027t\u003E \n\n Represents a single 3D plot.\n \nPlot3D\u003C\u0027l, \u0027t\u003E.Title \nTitle \nPlot3D\u003C\u0027l, \u0027t\u003E.Trajectories \nTrajectories"},{"uri":"/Embody/reference/embody-visualisations-plot3d.html#Title","title":"Plot3D\u003C\u0027l, \u0027t\u003E.Title","content":"Plot3D\u003C\u0027l, \u0027t\u003E.Title \nTitle \n"},{"uri":"/Embody/reference/embody-visualisations-plot3d.html#Trajectories","title":"Plot3D\u003C\u0027l, \u0027t\u003E.Trajectories","content":"Plot3D\u003C\u0027l, \u0027t\u003E.Trajectories \nTrajectories \n"},{"uri":"/Embody/reference/embody-visualisations-single2dseries.html","title":"Single2DSeries\u003C\u0027x, \u0027y\u003E","content":"Single2DSeries\u003C\u0027x, \u0027y\u003E \n\n Represents a single 2D plot series (a single plot can contain 1 or more series).\n \nSingle2DSeries\u003C\u0027x, \u0027y\u003E.Name \nName \nSingle2DSeries\u003C\u0027x, \u0027y\u003E.X \nX \nSingle2DSeries\u003C\u0027x, \u0027y\u003E.Y \nY"},{"uri":"/Embody/reference/embody-visualisations-single2dseries.html#Name","title":"Single2DSeries\u003C\u0027x, \u0027y\u003E.Name","content":"Single2DSeries\u003C\u0027x, \u0027y\u003E.Name \nName \n"},{"uri":"/Embody/reference/embody-visualisations-single2dseries.html#X","title":"Single2DSeries\u003C\u0027x, \u0027y\u003E.X","content":"Single2DSeries\u003C\u0027x, \u0027y\u003E.X \nX \n"},{"uri":"/Embody/reference/embody-visualisations-single2dseries.html#Y","title":"Single2DSeries\u003C\u0027x, \u0027y\u003E.Y","content":"Single2DSeries\u003C\u0027x, \u0027y\u003E.Y \nY \n"},{"uri":"/Embody/reference/embody-visualisations-single3dtrajectory.html","title":"Single3DTrajectory\u003C\u0027l, \u0027t\u003E","content":"Single3DTrajectory\u003C\u0027l, \u0027t\u003E \n\n Represents a single trajectory on a 3D plot.\n \nSingle3DTrajectory\u003C\u0027l, \u0027t\u003E.Name \nName \nSingle3DTrajectory\u003C\u0027l, \u0027t\u003E.T \nT \nSingle3DTrajectory\u003C\u0027l, \u0027t\u003E.R \nR"},{"uri":"/Embody/reference/embody-visualisations-single3dtrajectory.html#Name","title":"Single3DTrajectory\u003C\u0027l, \u0027t\u003E.Name","content":"Single3DTrajectory\u003C\u0027l, \u0027t\u003E.Name \nName \n"},{"uri":"/Embody/reference/embody-visualisations-single3dtrajectory.html#T","title":"Single3DTrajectory\u003C\u0027l, \u0027t\u003E.T","content":"Single3DTrajectory\u003C\u0027l, \u0027t\u003E.T \nT \n"},{"uri":"/Embody/reference/embody-visualisations-single3dtrajectory.html#R","title":"Single3DTrajectory\u003C\u0027l, \u0027t\u003E.R","content":"Single3DTrajectory\u003C\u0027l, \u0027t\u003E.R \nR \n"},{"uri":"/Embody/index.html","title":"Embody: \u003Cspan class=\u0022math\u0022\u003E\\(n\\)\u003C/span\u003E-body simulations in F#\n","content":"# Embody: $n$-body simulations in F#\n\n\nEmbody is an F# library that allows you to easily define, execute, and validate $n$-body simulations.\n\nThe project is hosted on [GitHub](https://github.com/marax27/Embody), and the newest release is available on [NuGet](https://www.nuget.org/packages/Embody/).\n\n\n"},{"uri":"/Embody/major-features-in-n-minutes.html","title":"Major features in \uD835\uDC8F minutes\n","content":"# Major features in \uD835\uDC8F minutes\n\n\n## Vector arithmetic\n\n\u0060\u0060\u0060fsharp\nopen Embody.LinearAlgebra\nopen FSharp.Data.UnitSystems.SI.UnitSymbols\n\nlet position = vector3 5.0\u003Cm\u003E 4.0\u003Cm\u003E 3.0\u003Cm\u003E\nlet velocity = vector3 10.0\u003Cm/s\u003E 0.0\u003Cm/s\u003E 0.0\u003Cm/s\u003E\nlet deltaT = 0.1\u003Cs\u003E\n\nlet newPosition = position \u002B velocity * deltaT\n\nprintfn \u0022%A\u0022 newPosition\n\u0060\u0060\u0060\n\n## Celestial system definition\n\n\u0060\u0060\u0060fsharp\nopen Embody.Domain\nopen Embody.LinearAlgebra\n\n(* Instead of relying on SI unit system, one can choose their own units.\nIt can be useful when comparing with external data that use particular units.\nThe downside is that some parameters (e.g. gravitational constant)\ndepend on a choice of units and will have to be recalculated. *)\n[\u003CMeasure\u003E] type km\n[\u003CMeasure\u003E] type s\n[\u003CMeasure\u003E] type earthMass\n\nlet earthOrbitRadius = 150e6\u003Ckm\u003E\nlet averageEarthSpeed = 29.78\u003Ckm/s\u003E\n\nlet system : CelestialSystem\u003Ckm, s, earthMass\u003E = {\n    Bodies = [|\n        {\n            Name = \u0022Sol\u0022\n            Mass = 332950.0\u003CearthMass\u003E\n            R = Vector3.zero()\n            V = Vector3.zero()\n        }\n        {\n            Name = \u0022Earth\u0022\n            Mass = 1.0\u003CearthMass\u003E\n            R = vector3 earthOrbitRadius 0.0\u003C_\u003E 0.0\u003C_\u003E\n            V = vector3 0.0\u003C_\u003E averageEarthSpeed 0.0\u003C_\u003E\n        }\n    |]\n}\n\u0060\u0060\u0060\n\n## Simulation\n\nAssuming we\u0027d like to simulate the motion of the above system:\n\n\u0060\u0060\u0060fsharp\nopen Embody.Integration\nopen Embody.Simulation\n\n(*\n    The simulation preset expects a gravitational constant G expressed in\n    \u0027kilometers\u0027, \u0027seconds\u0027 and \u0027earth masses\u0027.\n    One can convert a common value of G to desired units. When units of measure\n    are explicitly specified, the compiler will verify the unit of a calculation result.\n\n    \u0060kg\u0060 and \u0060m\u0060 are used for conversion purposes. They are not used in the simulation.\n*)\n[\u003CMeasure\u003E] type kg\n[\u003CMeasure\u003E] type m\n\nlet gravitationalConstant: float\u003Ckm^3/earthMass/s^2\u003E =\n    let G = 6.674e-11\u003Cm^3/kg/s^2\u003E                    // commonly known value of G\n\n    // No time conversion needed: seconds are used in both cases.\n    let m2km = 1.0\u003Ckm\u003E/1000.0\u003Cm\u003E                     // distance conversion\n    let kg2EarthMass = 1.0\u003CearthMass\u003E/5.9722e24\u003Ckg\u003E  // mass conversion\n    G * m2km * m2km * m2km / kg2EarthMass\n\n\n(* Integrator settings.\n    - The number of steps depends on \u0060DeltaT\u0060, \u0060TStart\u0060 and \u0060TEnd\u0060 parameters.\n    - Accelerator: a function that computes body accelerations.\n *)\nlet settings: IntegratorSettings\u003Ckm, s, earthMass\u003E = {\n    DeltaT = 3600.0\u003Cs\u003E\n    TStart = 0.0\u003Cs\u003E\n    TEnd = 3600.0\u003Cs\u003E * 24.0 * 365.25\n    GravitationalConstant = gravitationalConstant\n    Accelerator = Accelerators.allBodiesConnected\n}\n\n\n(* Preset is a wrapper on all the things needed to kick off a simulation.\n    - Celestial system\n    - Integrator settings\n    - Integrator: a function that implements a numerical method.\n *)\nlet preset: SimulationPreset\u003Ckm, s, earthMass\u003E = {\n    System = system\n    Settings = settings\n    Integrator = Integrators.integrateVelocityVerlet\n}\n\nlet result = preset |\u003E Execution.simulate\n\nprintfn \u0022Generated %d steps (~%f hours in a year).\u0022 result.Steps.Length (24.0*365.25)\n\nlet lastStep = result.Steps |\u003E Array.last\nlet earthPosition = lastStep.R.[1] - lastStep.R.[0]\nprintfn \u0022Final Earth\u0027s position (relative to Sun): %A\u0022 earthPosition\n\u0060\u0060\u0060\n\n"}]